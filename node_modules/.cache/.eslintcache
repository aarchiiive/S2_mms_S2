[{"C:\\Users\\wjdwp\\S2_mms_S2\\src\\index.js":"1","C:\\Users\\wjdwp\\S2_mms_S2\\src\\App.js":"2","C:\\Users\\wjdwp\\S2_mms_S2\\src\\store.js":"3","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\EditUser.js":"4","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\ViewTemplates.js":"5","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\GenerateQR.js":"6","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\UserList.js":"7","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\Order.js":"8","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\AddUser.js":"9","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\Login.js":"10","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\Register.js":"11","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\CreditCard.js":"12","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\userSlice.js":"13","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\Confirm.js":"14","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\CashTransfer.js":"15","C:\\Users\\wjdwp\\S2_mms_S2\\src\\components\\Button.js":"16","C:\\Users\\wjdwp\\S2_mms_S2\\src\\components\\TextField.js":"17","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\ViewCard.js":"18","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\BusinessCard.js":"19"},{"size":766,"mtime":1670348866189,"results":"20","hashOfConfig":"21"},{"size":2038,"mtime":1670347922051,"results":"22","hashOfConfig":"21"},{"size":604,"mtime":1670349106398,"results":"23","hashOfConfig":"21"},{"size":3265,"mtime":1670329930581,"results":"24","hashOfConfig":"21"},{"size":2867,"mtime":1670343518809,"results":"25","hashOfConfig":"21"},{"size":785,"mtime":1670320967202,"results":"26","hashOfConfig":"21"},{"size":5543,"mtime":1670350030653,"results":"27","hashOfConfig":"21"},{"size":3722,"mtime":1670326611429,"results":"28","hashOfConfig":"21"},{"size":5406,"mtime":1670340156993,"results":"29","hashOfConfig":"21"},{"size":2191,"mtime":1670323564145,"results":"30","hashOfConfig":"21"},{"size":3501,"mtime":1670320967207,"results":"31","hashOfConfig":"21"},{"size":5182,"mtime":1670340188897,"results":"32","hashOfConfig":"21"},{"size":2844,"mtime":1670324787159,"results":"33","hashOfConfig":"21"},{"size":3589,"mtime":1670340176613,"results":"34","hashOfConfig":"21"},{"size":3533,"mtime":1670340161804,"results":"35","hashOfConfig":"21"},{"size":281,"mtime":1670349641808,"results":"36","hashOfConfig":"21"},{"size":413,"mtime":1669986468302,"results":"37","hashOfConfig":"21"},{"size":3227,"mtime":1670346572942,"results":"38","hashOfConfig":"21"},{"size":557,"mtime":1670342756012,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1ccoy6b",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"43"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"43"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"43"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"43"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"43"},"C:\\Users\\wjdwp\\S2_mms_S2\\src\\index.js",[],[],[],"C:\\Users\\wjdwp\\S2_mms_S2\\src\\App.js",[],[],"C:\\Users\\wjdwp\\S2_mms_S2\\src\\store.js",[],[],"C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\EditUser.js",["111"],[],"import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Button from \"../../components/Button\";\r\nimport TextField from \"../../components/TextField\";\r\nimport { editUser } from \"./userSlice\";\r\n\r\nconst EditUser = () => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((store) => store.users);\r\n  const navigate = useNavigate();\r\n  const existingUser = users.filter((user) => user.id === params.id);\r\n  const { name, phone, addr, SNS, position, email, time, memo } =\r\n    existingUser[0];\r\n  const [values, setValues] = useState({\r\n    name : \"\",\r\n    phone : \"\",\r\n    addr : \"\",\r\n    SNS : \"\",\r\n    position : \"\",\r\n    email : \"\",\r\n    time : \"\",\r\n    memo : \"\",\r\n  });\r\n\r\n  const handleEditUser = () => {\r\n    setValues({\r\n      name: \"\",\r\n      phone: \"\",\r\n      addr: \"\",\r\n      SNS: \"\",\r\n      position: \"\",\r\n      email: \"\",\r\n      time: \"\",\r\n      memo: \"\",\r\n    });\r\n    dispatch(\r\n      editUser({\r\n        id: params.id,\r\n        name: values.name,\r\n        phone: values.phone,\r\n        addr: values.addr,\r\n        SNS: values.SNS,\r\n        position: values.position,\r\n        email: values.email,\r\n        memo: values.memo,\r\n      })\r\n    );\r\n    navigate(\"/userlist\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen\">\r\n    <div className=\"mt-10 w-1/3 m-auto\">\r\n      <TextField\r\n        label=\"이름\"\r\n        value={values.name}\r\n        onChange={(e) => setValues({ ...values, name: e.target.value })}\r\n        inputProps={{ type: \"text\", placeholder: name}}\r\n      />\r\n      <br />\r\n      <TextField\r\n        label=\"전화번호\"\r\n        value={values.phone}\r\n        onChange={(e) => setValues({ ...values, phone: e.target.value })}\r\n        inputProps={{ type: \"text\", placeholder: phone}}\r\n      />\r\n      <TextField\r\n        label=\"주소\"\r\n        value={values.addr}\r\n        onChange={(e) => setValues({ ...values, addr: e.target.value })}\r\n        inputProps={{ type: \"text\", placeholder: addr }}\r\n      />\r\n      <TextField\r\n        label=\"SNS\"\r\n        value={values.SNS}\r\n        onChange={(e) => setValues({ ...values, SNS: e.target.value })}\r\n        inputProps={{ type: \"text\", placeholder: SNS}}\r\n      />\r\n      <TextField\r\n        label=\"직책/직무\"\r\n        value={values.position}\r\n        onChange={(e) => setValues({ ...values, position: e.target.value })}\r\n        inputProps={{ type: \"text\", placeholder: position}}\r\n      />\r\n      <TextField\r\n        label=\"Email\"\r\n        value={values.email}\r\n        onChange={(e) => setValues({ ...values, email: e.target.value })}\r\n        inputProps={{ type: \"email\", placeholder: email}}\r\n      />\r\n      <TextField\r\n        label=\"메모\"\r\n        value={values.memo}\r\n        default\r\n        onChange={(e) => setValues({ ...values, memo: e.target.value })}\r\n        inputProps={{\r\n          type: \"text\",\r\n          placeholder: memo,\r\n        }}\r\n      />\r\n      <br />\r\n\r\n        <div className = \"justify-between flex\">\r\n      <Button onClick={() => navigate(\"/userlist\")}>이전</Button>\r\n      <Button onClick={handleEditUser}>수정</Button>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\ViewTemplates.js",["112","113","114","115","116"],[],"import Button from \"../../components/Button\";\r\nimport TextField from \"../../components/TextField\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport { addTemplate } from \"./userSlice\";\r\nimport t1 from \"../../templates/template1.jpg\";\r\nimport t2 from \"../../templates/template2.jpg\";\r\nimport t3 from \"../../templates/business.jpg\";\r\n// import t4 from \"../../templates/template4.jpg\";\r\nimport t4 from \"../../templates/paper.jpg\";\r\n\r\nconst ViewTemplates = () => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [template, setTemplate] = useState();\r\n  const [templateName, setTemplateName] = useState();\r\n  const [selected, setSelected] = useState(false);\r\n  let templateSelected = false;\r\n  const position = [\r\n    \"object-left-top\",\r\n    \"object-right-top\",\r\n    \"object-left-bottom\",\r\n    \"object-right-bottom\"\r\n  ]\r\n  const colors = [\r\n    \"옐로우\",\r\n    \"블루\",\r\n    \"비즈니스\",\r\n    \"종이질감\"\r\n  ]\r\n  const handleViewTemplates = () => {\r\n    if (selected) {\r\n      console.log(template);\r\n      dispatch(addTemplate({id : params.id, template : template, templateName : templateName}));\r\n      navigate(\"/confirm/\"+ params.id);\r\n    }\r\n    else\r\n      alert(\"템플릿이 선택되지 않았습니다.\");\r\n  };\r\n\r\n  function RenderTemplate() {\r\n    const images = [t1, t2, t3, t4];\r\n  \r\n    return (\r\n      images.map((img, i) => {\r\n        return (\r\n          <div class=\"bg-white-500 opacity-100 scale-75 hover:opacity-70 rounded-md\">\r\n            <img \r\n            // class=\"group-hover:opacity-75\"\r\n            src={img} \r\n            onClick={e => {\r\n              // e.preventDefault();\r\n              const k = i + 1;\r\n              const imgName = \"t\" + k;\r\n              console.log(\"template\", i, \"selected\");\r\n              alert(colors[i] + \" 템플릿이 선택되었습니다.\");\r\n              setSelected(true);\r\n              console.log(imgName);\r\n              setTemplate(img);\r\n              setTemplateName(imgName);\r\n            }}\r\n            className=\"flex scale-100 w-[360px] h-[200px] object-center\"\r\n            alt=\"card template\"/>\r\n          </div>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-screen\">\r\n      <div class=\"box-border backdrop-contrast-125 h-[580px] w-[1000px] m-auto p-4 border-2 rounded-md\">\r\n        <div className=\"w-3/5 m-auto grid gap-10 md:grid-cols-2\">\r\n          <RenderTemplate></RenderTemplate>\r\n        </div>\r\n        <div className = \"px-60 justify-between flex\">\r\n          <Button onClick={() => navigate(\"/add-user\")}>이전</Button>\r\n          <Button onClick={handleViewTemplates}>다음</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewTemplates;","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\GenerateQR.js",["117","118","119","120","121","122","123","124"],[],"import Button from \"../../components/Button\";\r\nimport TextField from \"../../components/TextField\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {QRCodeSVG} from 'qrcode.react';\r\nimport { Container } from \"postcss\";\r\n\r\nconst GenerateQR = () => {\r\n  const params = useParams();\r\n  const url = \"localhost:3000/bussiness-card\";\r\n\r\n  return (\r\n    <div class=\"h-screen\">\r\n      <div class=\"mt-8 grid justify-items-stretch\">\r\n        <div class=\"justify-self-center ...\">\r\n          <QRCodeSVG value={url} />\r\n        </div>\r\n        <h1 class=\"mt-8 justify-self-center ...\">명함이 생성되었습니다!</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenerateQR;","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\UserList.js",["125","126"],[],"C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\Order.js",["127","128","129"],[],"import Button from \"../../components/Button\";\r\nimport TextField from \"../../components/TextField\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport { addPayment } from \"./userSlice\";\r\n\r\nconst Order = () => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const users = useSelector((store) => store.users);\r\n  const existingUser = users.filter((user) => user.id === params.id);\r\n  // const { name, phone, addr, SNS, position, email, time, memo } = existingUser[0];\r\n  const date = new Date();\r\n  const getDate = () => {\r\n    console.log(existingUser[0].time);\r\n    if (existingUser[0].time.length > 0) { \r\n      return existingUser[0].time;\r\n    }\r\n\r\n\r\n    // return (\r\n    //   date.getFullYear() +\r\n    //   \"년 \" +\r\n    //   (date.getMonth() + 1) +\r\n    //   \"월\" +\r\n    //   date.getDate() +\r\n    //   \"일 \" +\r\n    //   (\"0\" + date.getHours()).slice(-2) +\r\n    //   \"시 \" +\r\n    //   (\"0\" + date.getMinutes()).slice(-2) +\r\n    //   \"분\"\r\n    // )\r\n  }\r\n\r\n  const cardName = \"명함\";\r\n  const id = \"MMS\" ;\r\n  const amount = 1000;\r\n  const [ payment, setPayment ] = useState(\"CreditCard\");\r\n\r\n  const handleOrder = () => {\r\n    if (payment === \"CreditCard\") {\r\n      setPayment(\"CreditCard\");\r\n      dispatch(addPayment({ id : params.id , payment : \"CreditCard\"}));\r\n      console.log(existingUser[0].payment);\r\n      navigate(\"/checkout-credit-card/\" + params.id);\r\n    }\r\n    else {\r\n      setPayment(\"CashTransfer\");\r\n      dispatch(addPayment({ id : params.id , payment : \"CashTransfer\"}));\r\n      console.log(existingUser[0].payment);\r\n      navigate(\"/checkout-cash-transfer/\" + params.id);\r\n    }\r\n  };\r\n\r\n  const onPaymentHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"payment changed :\", e.target.value);\r\n    setPayment(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-screen\">\r\n      <div class=\"box-border backdrop-contrast-125 h-[560px] w-[1000px] m-auto p-4 border-2 rounded-md\">\r\n        <div className=\"py-12\">\r\n          <div class=\"my-8 grid grid-rows-1 gap-5 justify-center\">\r\n            <div>상품명 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{cardName}</div>\r\n            <div>주문번호 &nbsp;&nbsp; {id + String(users.length).padStart(4, '0')}</div>\r\n            <div>주문일시 &nbsp;&nbsp; {getDate()}</div>\r\n            <p>\r\n              <label>결제수단 &nbsp;&nbsp;&nbsp;</label>\r\n              <select name=\"payment\"\r\n              defaultValue=\"CreditCard\"\r\n              className=\"relative h-6 w-40 text-center border-[1px] rounded-md border-gray-400\"\r\n              onChange={onPaymentHandler}>\r\n                <option value=\"CreditCard\">신용/체크카드</option>\r\n                <option value=\"CashTransfer\">계좌이체</option>\r\n              </select>\r\n            </p>\r\n            <hr></hr>\r\n            <div className=\"font-semibold text-center text-lg\">총 결제 금액 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {amount}</div>\r\n          \r\n          </div>\r\n          <div className = \"mt-10 w-1/3 m-auto justify-between flex\">\r\n            <Button onClick={() => navigate(\"/confirm/\" + params.id)}>이전</Button>\r\n            {/* bg-yellow-200 font-bold py-2 px-6 my-10 shadow-md rounded-md hover:bg-yellow-300 */}\r\n            {/* <button class=\"py-2 px-6 my-10 font-bold rounded-lg shadow-md bg-blue-200 hover:bg-blue-300\"\r\n            onClick={handleAddUser}>\r\n              결제하기\r\n            </button> */}\r\n            <Button onClick={handleOrder}>다음</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Order;","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\AddUser.js",["130","131","132","133","134","135","136"],[],"import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Button from \"../../components/Button\";\r\nimport TextField from \"../../components/TextField\";\r\nimport { addUser } from \"./userSlice\";\r\n\r\nconst AddUser = () => {\r\n  let id = uuidv4();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const date = new Date();\r\n  const addDate =\r\n    date.getFullYear() +\r\n    \"년 \" +\r\n    (date.getMonth() + 1) +\r\n    \"월\" +\r\n    date.getDate() +\r\n    \"일 \" +\r\n    (\"0\" + date.getHours()).slice(-2) +\r\n    \":\" +\r\n    (\"0\" + date.getMinutes()).slice(-2);\r\n\r\n  const [values, setValues] = useState({\r\n    image: \"\",\r\n    name: \"\",\r\n    phone: \"\",\r\n    addr: \"\",\r\n    SNS: \"\",\r\n    position: \"\",\r\n    email: \"\",\r\n    time: addDate,\r\n    memo: \"\",\r\n  });\r\n\r\n  const verifyPhoneNumber = () => {\r\n    var regex = /^[0-9]{3}-[0-9]{3,4}-[0-9]{4}/;\r\n    return (\r\n      values.phone != \"\" &&\r\n      values.phone != \"undefined\" &&\r\n      regex.test(values.phone)\r\n    );\r\n  };\r\n\r\n  const verifyEmail = () => {\r\n    var regex =\r\n      /([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\r\n    return (\r\n      values.email != \"\" &&\r\n      values.email != \"undefined\" &&\r\n      regex.test(values.email)\r\n    );\r\n  };\r\n\r\n  const handleAddUser = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      addUser({\r\n        id: id,\r\n        image: values.image,\r\n        name: values.name,\r\n        phone: values.phone,\r\n        addr: values.addr,\r\n        SNS: values.SNS,\r\n        position: values.position,\r\n        email: values.email,\r\n        time: addDate,\r\n        memo: values.memo,\r\n        purchased: false,\r\n      })\r\n    );\r\n\r\n    const info = Object.values(values);\r\n    for (let i = 0; i < info.length; i++) {\r\n      if (info[i].length === 0) {\r\n        console.log(\"입력 되지 않음\");\r\n        alert(\"입력되지 않은 정보가 있습니다.\");\r\n        return;\r\n      }\r\n      // console.log(info[i])\r\n    }\r\n\r\n    if (!verifyPhoneNumber()) {\r\n      alert(\"유효하지 않은 전화번호입니다.\");\r\n      return;\r\n    }\r\n\r\n    if (!verifyEmail()) {\r\n      alert(\"유효하지 않은 이메일입니다.\");\r\n      return;\r\n    }\r\n\r\n    navigate(\"/view-templates/\" + id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen w-1/2 m-auto\">\r\n      <div class=\"\">\r\n        <div class=\"box-border backdrop-contrast-125 w-auto h-5/6 p-4 border-2 rounded-md\">\r\n          <div className=\"y-2 mb-2 flex flex-col text-base font-bold text-gray-800\">\r\n            사진\r\n            <input\r\n              className=\"mb-2\"\r\n              type=\"file\"\r\n              onChange={(e) =>\r\n                setValues({\r\n                  ...values,\r\n                  image: URL.createObjectURL(e.target.files[0]),\r\n                })\r\n              }\r\n            ></input>\r\n          </div>\r\n          <TextField\r\n            label=\"이름\"\r\n            value={values.name}\r\n            onChange={(e) => setValues({ ...values, name: e.target.value })}\r\n            inputProps={{ type: \"text\", placeholder: \"이름을 입력하세요\" }}\r\n          />\r\n          <br />\r\n          <TextField\r\n            label=\"전화번호\"\r\n            value={values.phone}\r\n            onChange={(e) => setValues({ ...values, phone: e.target.value })}\r\n            inputProps={{ type: \"text\", placeholder: \"전화번호를 입력하세요\" }}\r\n          />\r\n          <TextField\r\n            label=\"주소\"\r\n            value={values.addr}\r\n            onChange={(e) => setValues({ ...values, addr: e.target.value })}\r\n            inputProps={{ type: \"text\", placeholder: \"주소를 입력하세요\" }}\r\n          />\r\n          <TextField\r\n            label=\"SNS\"\r\n            value={values.SNS}\r\n            onChange={(e) => setValues({ ...values, SNS: e.target.value })}\r\n            inputProps={{ type: \"text\", placeholder: \"SNS를 입력하세요\" }}\r\n          />\r\n          <TextField\r\n            label=\"직책/직무\"\r\n            value={values.position}\r\n            onChange={(e) => setValues({ ...values, position: e.target.value })}\r\n            inputProps={{ type: \"text\", placeholder: \"직책/직무를 입력하세요\" }}\r\n          />\r\n          <TextField\r\n            label=\"Email\"\r\n            value={values.email}\r\n            onChange={(e) => setValues({ ...values, email: e.target.value })}\r\n            inputProps={{ type: \"email\", placeholder: \"Email을 입력하세요\" }}\r\n          />\r\n          <TextField\r\n            label=\"메모\"\r\n            value={values.memo}\r\n            onChange={(e) => setValues({ ...values, memo: e.target.value })}\r\n            inputProps={{\r\n              type: \"text\",\r\n              placeholder: \"명함에 대한 메모를 입력하세요\",\r\n            }}\r\n          />\r\n          <div className=\"justify-between flex\">\r\n            <Button onClick={() => navigate(\"/userlist\")}>이전</Button>\r\n            {/* <Link to={`/view-templates/${id}`} key={id}> */}\r\n            <Button onClick={handleAddUser}>다음</Button>\r\n            {/* </Link> */}\r\n            {/* <Button onClick={() => navigate(\"/view-templates\")}>다음</Button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AddUser;","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\Login.js",["137","138","139"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const verifyEmail = () => {\r\n    var regex=/([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\r\n    return (email != '' && email != 'undefined' && regex.test(email));\r\n  };\r\n\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const handleAccountInfo = (e) => {\r\n    e.preventDefault();\r\n    if (verifyEmail())\r\n      if (password.length === 0)\r\n        alert(\"비밀번호가 입력되지 않았습니다.\")\r\n      else\r\n        navigate(\"/userlist\");\r\n    else\r\n      alert(\"유효하지 않은 이메일입니다.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen w-1/3 m-auto text-center\">\r\n      <form>\r\n        <div className=\"mb-2 text-base font-bold text-gray-800\">\r\n          <input\r\n            className =\"py-2 mb-2 px-3 border-2 outline-none\"\r\n            type=\"email\"\r\n            placeholder=\"이메일\"\r\n            value={email}\r\n            onChange={onEmailHandler}\r\n          />\r\n        </div>\r\n        <div className=\"mb-2 text-base font-bold text-gray-800\">\r\n          <input className =\"py-2 mb-2 px-3 border-2 outline-none\"\r\n            type=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            value={password}\r\n            onChange={onPasswordHandler}\r\n          />\r\n        </div>\r\n        <div className=\"justify-between flex\">\r\n          <button className=\"bg-yellow-200  py-2 px-6 my-10 shadow-md rounded-md font-bold hover:bg-yellow-300\" type=\"submit\" onClick={handleAccountInfo}>\r\n            로그인\r\n          </button>\r\n          <button className=\"bg-yellow-200  py-2 px-6 my-10 shadow-md rounded-md font-bold hover:bg-yellow-300\" type=\"submit\" onClick={() => navigate(\"/register\")}>\r\n            회원가입\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\Register.js",["140","141","142"],[],"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Register() {\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const verifyEmail = () => {\r\n    var regex=/([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\r\n    return (email != '' && email != 'undefined' && regex.test(email));\r\n  }\r\n\r\n  const onNameHandler = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const onEmailHandler = (event) => {\r\n    setEmail(event.currentTarget.value);\r\n  };\r\n\r\n  const onPasswordHandler = (event) => {\r\n    setPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const onConfirmPasswordHandler = (event) => {\r\n    setConfirmPassword(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const infoList = [name, email, password, confirmPassword];\r\n    for (let i = 0; i < infoList.length; i++) {\r\n      if (infoList[i].length === 0) { \r\n        console.log(\"입력 되지 않음\");\r\n        alert(\"입력되지 않은 정보가 있습니다.\");\r\n        return;\r\n      };\r\n    };\r\n\r\n    if (!verifyEmail()) {\r\n      alert(\"유효하지 않은 이메일입니다.\");\r\n      return;\r\n    };\r\n\r\n    if (password !== confirmPassword) {\r\n      return alert(\"비밀번호가 일치하지 않습니다.\");\r\n    } else {\r\n      alert(\"회원가입이 완료되었습니다.\");\r\n      navigate(\"/login\");\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen w-1/3 m-auto text-center\">\r\n      <form>\r\n        <div className=\"mb-2 text-base font-bold text-gray-800\">\r\n          <input\r\n            className=\"py-2 mb-2 px-3 border-2 outline-none\"\r\n            type=\"text\"\r\n            placeholder=\"이름\"\r\n            value={name}\r\n            onChange={onNameHandler}\r\n          />\r\n        </div>\r\n        <div className=\"mb-2 text-base font-bold text-gray-800\">\r\n          <input\r\n            className=\"py-2 mb-2 px-3 border-2 outline-none\"\r\n            type=\"email\"\r\n            placeholder=\"이메일\"\r\n            value={email}\r\n            onChange={onEmailHandler}\r\n          />\r\n        </div>\r\n        <div className=\"mb-2 text-base font-bold text-gray-800\">\r\n          <input\r\n            className=\"py-2 mb-2 px-3 border-2 outline-none\"\r\n            type=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            value={password}\r\n            onChange={onPasswordHandler}\r\n          />\r\n        </div>\r\n        <div className=\"mb-2 text-base font-bold text-gray-800\">\r\n          <input\r\n            className=\"py-2 mb-2 px-3 border-2 outline-none\"\r\n            type=\"password\"\r\n            placeholder=\"비밀번호 확인\"\r\n            value={confirmPassword}\r\n            onChange={onConfirmPasswordHandler}\r\n          />\r\n        </div>\r\n        <div className=\"justify-between flex\">\r\n          <button className=\"bg-yellow-200  py-2 px-6 my-10 shadow-md rounded-md font-bold hover:bg-yellow-300\" type=\"submit\" onClick={() => navigate(\"/\")}>\r\n            이전\r\n          </button>\r\n          <button className=\"bg-yellow-200  py-2 px-6 my-10 shadow-md rounded-md font-bold hover:bg-yellow-300\" type=\"submit\" onClick={onSubmit}>\r\n            완료\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default Register;\r\n","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\CreditCard.js",["143","144"],[],"import Button from \"../../components/Button\";\r\nimport TextField from \"../../components/TextField\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { addPurchased } from \"./userSlice\";\r\n\r\nconst CreditCard = () => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const amount = 1000;\r\n  const [paymentInfo, setPaymentInfo] = useState({\r\n    company: \"신한카드\",\r\n    number: \"\",\r\n    expireDate: \"\",\r\n    cvc: \"\"\r\n  });\r\n\r\n  const examplePaymentInfo = {\r\n    company: \"신한카드\",\r\n    number: \"4113 8681 3646 9842\",\r\n    expireDate: \"0327\",\r\n    cvc: \"934\"\r\n  };\r\n\r\n  const getPayment = () => {\r\n    const cardList = [\r\n      \"신한카드\",\r\n      \"하나카드\",\r\n      \"농협카드\",\r\n      \"국민카드\",\r\n      \"삼성카드\",\r\n      \"현대카드\",\r\n    ];\r\n\r\n    return cardList.map((c, i) => {\r\n      return <option value={c}>{c}</option>;\r\n    });\r\n  };\r\n\r\n  const verifyPaymentInfo = () => {\r\n    if (\r\n      paymentInfo.company === examplePaymentInfo.company &&\r\n      paymentInfo.number === examplePaymentInfo.number &&\r\n      paymentInfo.expireDate === examplePaymentInfo.expireDate &&\r\n      paymentInfo.cvc === examplePaymentInfo.cvc\r\n    )\r\n      return true;\r\n    else return false;\r\n  };\r\n\r\n  const handleCheckOut = (e) => {\r\n    e.preventDefault();\r\n\r\n    const info = Object.values(paymentInfo);\r\n    for (let i = 0; i < info.length; i++) {\r\n      if (info[i].length === 0) { \r\n        console.log(\"입력 되지 않음\");\r\n        alert(\"입력되지 않은 결제 정보가 있습니다.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (verifyPaymentInfo()) {\r\n      console.log(\"Payment verified!\");\r\n      alert(\"명함이 생성되었습니다!\");\r\n      dispatch(addPurchased({id : params.id, purchased : true}));\r\n      navigate(\"/userlist\");\r\n    } else {\r\n      alert(\"유효하지 않은 결제 정보입니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class=\"h-screen\">\r\n      <div class=\"box-border backdrop-contrast-125 h-[560px] w-[1000px] m-auto p-4 border-2 rounded-md\">\r\n        <div className=\"py-8\">\r\n          <div class=\"my-8 grid grid-rows-1 gap-5 justify-center\">\r\n            <p>\r\n              <label for=\"\">카드사 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\r\n              <select\r\n                className=\"relative h-6 w-44 text-center border-[1px] rounded-md border-gray-400\"\r\n                name=\"payment\"\r\n              >\r\n                {getPayment()}\r\n              </select>\r\n            </p>\r\n            <div className=\"justify-between flex\">\r\n              카드번호\r\n              <input\r\n                className=\"ml-5 text-center border-[1px] rounded-md border-gray-400\"\r\n                onChange={(e) => {\r\n                  // e.preventDefault();\r\n                  console.log(e.target.value);\r\n                  if (e.target.value === examplePaymentInfo.number) {\r\n                    setPaymentInfo({ ...paymentInfo, number: e.target.value });\r\n                    console.log(\"Card number verified!\");\r\n                  }\r\n                }}\r\n              ></input>\r\n            </div>\r\n            <div className =\"justify-between flex\">\r\n              유효기간\r\n              <input\r\n                className=\"ml-5 text-center border-[1px] rounded-md border-gray-400\"\r\n                onChange={(e) => {\r\n                  // e.preventDefault();\r\n                  console.log(e.target.value);\r\n                  if (e.target.value === examplePaymentInfo.expireDate) {\r\n                    setPaymentInfo({...paymentInfo, expireDate: e.target.value});\r\n                    console.log(\"Expire date verified!\");\r\n                  }\r\n                }}\r\n              ></input>\r\n            </div>\r\n            <div className=\"justify-between flex\">\r\n              CVC\r\n              <input className=\"ml-5 text-center border-[1px] rounded-md border-gray-400\"\r\n                onChange={(e) => {\r\n                  // e.preventDefault();\r\n                  console.log(e.target.value);\r\n                  if (e.target.value === examplePaymentInfo.cvc) {\r\n                    setPaymentInfo({ ...paymentInfo, cvc: e.target.value });\r\n                    console.log(\"CVC verified!\");\r\n                  }\r\n                }}\r\n              ></input>\r\n            </div>\r\n            <hr></hr>\r\n            <p className=\"font-semibold text-center text-lg\">\r\n              총 결제 금액 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {amount}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-2 w-1/3 m-auto justify-between flex\">\r\n          <Button onClick={() => navigate(\"/order/\" + params.id)}>이전</Button>\r\n          <button\r\n            class=\"py-2 px-4 my-10 font-bold rounded-lg shadow-lg shadow-blue-400/40 bg-blue-200 hover:bg-blue-300\"\r\n            onClick={handleCheckOut}\r\n          >\r\n            결제하기\r\n          </button>\r\n          {/* <Button onClick={handleAddUser}>다음</Button> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreditCard;","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\userSlice.js",["145"],[],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nconst userSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    addUser: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n    editUser: (state, action) => {\r\n      const date = new Date();\r\n      const editDate =\r\n        date.getFullYear() +\r\n        \"년 \" +\r\n        (date.getMonth() + 1) +\r\n        \"월\" +\r\n        date.getDate() +\r\n        \"일 \" +\r\n        (\"0\" + date.getHours()).slice(-2) +\r\n        \":\" +\r\n        (\"0\" + date.getMinutes()).slice(-2)+'에 수정됨';\r\n      const { id, name, phone, addr, SNS, position,email,time ,memo} = action.payload;\r\n      const existingUser = state.find(user => user.id === id);\r\n      if(existingUser) {\r\n        existingUser.name = name;\r\n        existingUser.phone = phone;\r\n        existingUser.addr = addr;\r\n        existingUser.SNS = SNS;\r\n        existingUser.position = position;\r\n        existingUser.email = email;\r\n        existingUser.time= editDate;\r\n        existingUser.memo = memo;\r\n      }\r\n    },\r\n    viewCard: (state, action) => {\r\n      const { id, name, phone, addr, SNS, position,email,memo} = action.payload;\r\n      const existingUser = state.find(user => user.id === id);\r\n      if(existingUser) {\r\n        existingUser.name = name;\r\n        existingUser.phone = phone;\r\n        existingUser.addr = addr;\r\n        existingUser.SNS = SNS;\r\n        existingUser.position = position;\r\n        existingUser.email = email;\r\n        existingUser.memo = memo;\r\n      }\r\n    },\r\n    deleteUser: (state, action) => {\r\n      const { id } = action.payload;\r\n      const existingUser = state.find(user => user.id === id);\r\n      if(existingUser) {\r\n        return state.filter(user => user.id !== id);\r\n      }\r\n    },\r\n    addTemplate: (state, action) => {\r\n      const { id, template, templateName } = action.payload;\r\n      const existingUser = state.find(user => user.id === id);\r\n      console.log(existingUser);\r\n      if (existingUser) {\r\n        existingUser.template = template;\r\n        existingUser.templateName = templateName;\r\n      }\r\n    },\r\n    addPayment: (state, action) => {\r\n      const { id, payment } = action.payload;\r\n      const existingUser = state.find(user => user.id === id);\r\n      console.log(existingUser);\r\n      if (existingUser) {\r\n        existingUser.payment = payment;\r\n      }\r\n    },\r\n    addPurchased: (state, action) => {\r\n      const { id, purchased } = action.payload;\r\n      const existingUser = state.find(user => user.id === id);\r\n      console.log(existingUser);\r\n      if (existingUser) {\r\n        existingUser.purchased = purchased;\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addUser, editUser, viewCard, deleteUser, addTemplate, addPayment, addPurchased } = userSlice.actions;\r\nexport default userSlice.reducer;","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\Confirm.js",["146","147","148","149"],[],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../../components/Button\";\r\nimport { deleteUser } from \"./userSlice\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport html2canvas from \"html2canvas\";\r\nimport paper from \"../../templates/paper.jpg\";\r\n\r\nconst Confirm = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((store) => store.users);\r\n  const handleRemoveUser = (id) => {\r\n    dispatch(deleteUser({ id }));\r\n  };\r\n\r\n  const onCapture = () => {\r\n    const can = document.getElementById(\"imageWrapper\");\r\n    html2canvas(can).then((canvas) => {\r\n      onSaveAs(canvas.toDataURL(\"image/png\"), \"명함.png\");\r\n    });\r\n  };\r\n\r\n  const onSaveAs = (uri, filename) => {\r\n    console.log(\"onSaveAs\");\r\n    var link = document.createElement(\"a\");\r\n    document.body.appendChild(link);\r\n    link.href = uri;\r\n    link.download = filename;\r\n    // link.download = false;\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  console.log(users[users.length - 1]);\r\n  return (\r\n    <div className=\"m-auto mt-10 h-screen\">\r\n      <div class=\"box-border backdrop-contrast-125 h-[560px] w-[1000px] m-auto p-4 border-2 rounded-md\">\r\n        <div className=\"py-4\">\r\n          <h3 className=\"text-center text-gray-600 text-2xl mb-10\">\r\n            명함 최종 확인 단계입니다\r\n          </h3>\r\n          <h3 className=\"text-center text-gray-600 text-2xl mb-10\">\r\n            명함을 생성하려면 결제를 진행해주세요\r\n          </h3>\r\n          <div className=\"m-auto w-96 drop-shadow-lg\">\r\n            <div className=\"\">\r\n              <div id=\"imageWrapper\" className=\"relative\">\r\n                <div\r\n                  className=\"absolute m-auto h-auto rounded-md flex w-full p-5\"\r\n                  key={users[users.length - 1].id}\r\n                >\r\n                  <div className=\"z-10 p-3\">\r\n                    <img\r\n                      className=\"h-[100px] w-auto border-[2px] border-double border-white rounded-md\"\r\n                      alt=\"업로드 이미지\"\r\n                      src={users[users.length - 1].image}\r\n                    ></img>\r\n                    <h3 className=\"font-bold pt-2 text-lg text-gray-700\">\r\n                      {users[users.length - 1].name}\r\n                    </h3>\r\n                    <p className=\"font-normal text-gray-600\">\r\n                      {users[users.length - 1].memo}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <img\r\n                  className=\"w-96 h-[220px] justify-center rounded-md\"\r\n                  alt=\"명함 템플릿\"\r\n                  src={users[users.length - 1].template}\r\n                  // src={paper}\r\n                ></img>\r\n                <div className=\"flex gap-4\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"py-4 w-1/3 m-auto justify-between flex\">\r\n            <Button onClick={() => navigate(\"/view-templates/\" + params.id)}>\r\n              이전\r\n            </Button>\r\n            <Button onClick={() => navigate(\"/order/\" + params.id)}>결제</Button>\r\n            {/* <button\r\n              className=\"bg-yellow-200  py-2 px-6 my-10 shadow-md rounded-md font-bold hover:bg-yellow-300\"\r\n              onClick={onCapture}\r\n            >\r\n              클릭\r\n            </button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Confirm;","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\CashTransfer.js",["150","151"],[],"import Button from \"../../components/Button\";\r\nimport TextField from \"../../components/TextField\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { addPurchased } from \"./userSlice\";\r\n\r\nconst CashTransfer = () => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [paymentInfo, setPaymentInfo] = useState({\r\n    bank: \"\",\r\n    customerName: \"\",\r\n  });\r\n  const amount = 1000;\r\n\r\n  const getBankList = () => {\r\n    const cardList = [\r\n      \"신한은행\",\r\n      \"하나은행\",\r\n      \"농협은행\",\r\n      \"국민은행\",\r\n      \"기업은행\",\r\n    ];\r\n    return cardList.map((c, i) => {\r\n      return <option value={c}>{c}</option>;\r\n    });\r\n  };\r\n\r\n  const examplePaymentInfo = {\r\n    // bank : \"국민은행\",\r\n    // customerName : \"\",\r\n    balance : 1000\r\n  }\r\n\r\n  const verifyPaymentInfo = () => {\r\n    if (examplePaymentInfo.balance >= amount) return true;\r\n    else return false;\r\n  };\r\n\r\n  const handleCheckOut = (e) => {\r\n    e.preventDefault();\r\n    if (paymentInfo.customerName.length === 0) {\r\n      alert(\"입금자 성함이 입력되지 않았습니다\");\r\n      return;\r\n    }\r\n\r\n    if (verifyPaymentInfo()) {\r\n      console.log(\"Payment verified!\");\r\n      alert(\"명함이 생성되었습니다!\");\r\n      dispatch(addPurchased({id : params.id, purchased : true}));\r\n      navigate(\"/userlist\");\r\n    } else {\r\n      alert(\"잔액이 부족합니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen\">\r\n      <div class=\"box-border backdrop-contrast-125 h-[560px] w-[1000px] m-auto p-4 border-2 rounded-md\">\r\n        <div className=\"py-16\">\r\n          <div class=\"my-8 grid grid-rows-1 gap-5 justify-center\">\r\n            <div>\r\n              <label for=\"\">은행명 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\r\n              <select\r\n                name=\"payment\"\r\n                className=\"relative h-6 w-48 text-center border-[1px] rounded-md border-gray-400\"\r\n              >\r\n                {getBankList()}\r\n              </select>\r\n            </div>\r\n            <div className =\"justify-between flex\">\r\n              입금자 성함 &nbsp;\r\n              <input\r\n                className=\"w-48 text-center border-[1px] rounded-md border-gray-400\"\r\n                onChange={(e) => {\r\n                  e.preventDefault();\r\n                  console.log(e.target.value);\r\n                  setPaymentInfo({...paymentInfo, customerName : e.target.value});\r\n                }}\r\n              ></input>\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"font-semibold text-center text-lg\">총 결제 금액 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {amount}</div>\r\n          </div>\r\n          <div className=\"mt-24 w-1/3 m-auto justify-between flex\">\r\n            <Button onClick={() => navigate(\"/order/\" + params.id)}>이전</Button>\r\n            {/* bg-yellow-200 font-bold py-2 px-6 my-10 shadow-md rounded-md hover:bg-yellow-300 */}\r\n            <button\r\n              class=\"py-2 px-4 my-10 font-bold rounded-lg shadow-lg shadow-blue-400/40 bg-blue-200 hover:bg-blue-300\"\r\n              onClick={handleCheckOut}\r\n            >\r\n              결제하기\r\n            </button>\r\n            {/* <Button onClick={handleAddUser}>다음</Button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CashTransfer;","C:\\Users\\wjdwp\\S2_mms_S2\\src\\components\\Button.js",[],[],"C:\\Users\\wjdwp\\S2_mms_S2\\src\\components\\TextField.js",[],[],"C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\ViewCard.js",["152","153","154"],[],"import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Button from \"../../components/Button\";\r\nimport TextField from \"../../components/TextField\";\r\nimport { addPurchased, viewCard } from \"./userSlice\";\r\n\r\nconst ViewCard = () => {\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((store) => store.users);\r\n  console.log(users);\r\n  const navigate = useNavigate();\r\n  const existingUser = users.filter((user) => user.id === params.id);\r\n\r\n  console.log(existingUser[0]);\r\n  const { name, phone, addr, SNS, position, email, time, memo } =\r\n    existingUser[0];\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    addr: \"\",\r\n    SNS: \"\",\r\n    position: \"\",\r\n    email: \"\",\r\n    time: \"\",\r\n    memo: \"\",\r\n  });\r\n  console.log(existingUser[0]);\r\n\r\n  const handleEditUser = () => {\r\n    setValues({\r\n      name: \"\",\r\n      phone: \"\",\r\n      addr: \"\",\r\n      SNS: \"\",\r\n      position: \"\",\r\n      email: \"\",\r\n      time: \"\",\r\n      memo: \"\",\r\n    });\r\n    dispatch(\r\n      viewCard({\r\n        id: params.id,\r\n        name: values.name,\r\n        phone: values.phone,\r\n        addr: values.addr,\r\n        SNS: values.SNS,\r\n        position: values.position,\r\n        email: values.email,\r\n        memo: values.memo,\r\n      })\r\n    );\r\n    navigate(\"/userlist\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen\">\r\n      <div className=\"mt-10 w-1/3 m-auto\">\r\n        <div className=\"flex flex-col\">\r\n          <h1 className=\"mb-2 text-base font-bold text-gray-800\">이름</h1>\r\n\r\n          <h1 className=\"text-centerpy-2 mb-2 px-3 bg-yellow-200 shadow-md font-bold outline-none rounded-2xl\">{name}</h1>\r\n          <h1 className=\"mb-2 text-base font-bold text-gray-800\">전화번호</h1>\r\n          <h1 className=\"py-2 mb-2 px-3 bg-yellow-200 shadow-md font-bold outline-none rounded-2xl\">{phone}</h1>\r\n          <h1 className=\"mb-2 text-base font-bold text-gray-800\">주소</h1>\r\n          <h1 className=\"py-2 mb-2 px-3 bg-yellow-200 shadow-md font-bold outline-none rounded-2xl\">{addr}</h1>\r\n          <h1 className=\"mb-2 text-base font-bold text-gray-800\">SNS</h1>\r\n          <h1 className=\"py-2 mb-2 px-3 bg-yellow-200 shadow-md font-bold outline-none rounded-2xl\">{SNS}</h1>\r\n          <h1 className=\"mb-2 text-base font-bold text-gray-800\">직무/직책</h1>\r\n          <h1 className=\"py-2 mb-2 px-3 bg-yellow-200 shadow-md font-bold outline-none rounded-2xl\">{position}</h1>\r\n          <h1 className=\"mb-2 text-base font-bold text-gray-800\">이메일</h1>\r\n          <h1 className=\"py-2 mb-2 px-3 bg-yellow-200 shadow-md font-bold outline-none rounded-2xl\">{email}</h1>\r\n          <h1 className=\"mb-2 text-base font-bold text-gray-800\">메모</h1>\r\n          <h1 className=\"py-2 mb-2 px-3 bg-yellow-200 shadow-md font-bold outline-none rounded-2xl\">{memo}</h1>\r\n        </div>\r\n        <br />\r\n\r\n        <div className=\"justify-between flex\">\r\n          <Button onClick={() => navigate(\"/userlist\")}>이전</Button>\r\n          <Button onClick={handleEditUser}>수정</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewCard;\r\n","C:\\Users\\wjdwp\\S2_mms_S2\\src\\features\\users\\BusinessCard.js",["155","156","157","158","159","160","161","162","163","164"],[],"import Button from \"../../components/Button\";\r\nimport TextField from \"../../components/TextField\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {QRCodeSVG} from 'qrcode.react';\r\nimport { Container } from \"postcss\";\r\n\r\n\r\nconst BusinessCard = () => {\r\n  return (\r\n    <div class=\"mt-8 grid justify-items-stretch\">\r\n      <img\r\n      src=\"example.jpg\"\r\n      class=\"justify-self-center\"></img>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BusinessCard;",{"ruleId":"165","severity":1,"message":"166","line":14,"column":52,"nodeType":"167","messageId":"168","endLine":14,"endColumn":56},{"ruleId":"165","severity":1,"message":"169","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":17},{"ruleId":"165","severity":1,"message":"170","line":4,"column":23,"nodeType":"167","messageId":"168","endLine":4,"endColumn":34},{"ruleId":"165","severity":1,"message":"171","line":5,"column":34,"nodeType":"167","messageId":"168","endLine":5,"endColumn":38},{"ruleId":"165","severity":1,"message":"172","line":20,"column":7,"nodeType":"167","messageId":"168","endLine":20,"endColumn":23},{"ruleId":"165","severity":1,"message":"173","line":21,"column":9,"nodeType":"167","messageId":"168","endLine":21,"endColumn":17},{"ruleId":"165","severity":1,"message":"174","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":17},{"ruleId":"165","severity":1,"message":"175","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":18},{"ruleId":"165","severity":1,"message":"176","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":21},{"ruleId":"165","severity":1,"message":"170","line":4,"column":23,"nodeType":"167","messageId":"168","endLine":4,"endColumn":34},{"ruleId":"165","severity":1,"message":"177","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":21},{"ruleId":"165","severity":1,"message":"178","line":7,"column":10,"nodeType":"167","messageId":"168","endLine":7,"endColumn":19},{"ruleId":"165","severity":1,"message":"179","line":10,"column":9,"nodeType":"167","messageId":"168","endLine":10,"endColumn":15},{"ruleId":"165","severity":1,"message":"180","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":10},{"ruleId":"165","severity":1,"message":"181","line":12,"column":9,"nodeType":"167","messageId":"168","endLine":12,"endColumn":17},{"ruleId":"165","severity":1,"message":"169","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":17},{"ruleId":"165","severity":1,"message":"171","line":5,"column":34,"nodeType":"167","messageId":"168","endLine":5,"endColumn":38},{"ruleId":"165","severity":1,"message":"182","line":15,"column":9,"nodeType":"167","messageId":"168","endLine":15,"endColumn":13},{"ruleId":"165","severity":1,"message":"183","line":3,"column":23,"nodeType":"167","messageId":"168","endLine":3,"endColumn":32},{"ruleId":"165","severity":1,"message":"171","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":41,"column":20,"nodeType":"186","messageId":"187","endLine":41,"endColumn":22},{"ruleId":"184","severity":1,"message":"185","line":42,"column":20,"nodeType":"186","messageId":"187","endLine":42,"endColumn":22},{"ruleId":"188","severity":1,"message":"189","line":49,"column":13,"nodeType":"190","messageId":"191","endLine":49,"endColumn":14,"suggestions":"192"},{"ruleId":"184","severity":1,"message":"185","line":51,"column":20,"nodeType":"186","messageId":"187","endLine":51,"endColumn":22},{"ruleId":"184","severity":1,"message":"185","line":52,"column":20,"nodeType":"186","messageId":"187","endLine":52,"endColumn":22},{"ruleId":"188","severity":1,"message":"189","line":10,"column":21,"nodeType":"190","messageId":"191","endLine":10,"endColumn":22,"suggestions":"193"},{"ruleId":"184","severity":1,"message":"185","line":11,"column":19,"nodeType":"186","messageId":"187","endLine":11,"endColumn":21},{"ruleId":"184","severity":1,"message":"185","line":11,"column":34,"nodeType":"186","messageId":"187","endLine":11,"endColumn":36},{"ruleId":"188","severity":1,"message":"189","line":12,"column":21,"nodeType":"190","messageId":"191","endLine":12,"endColumn":22,"suggestions":"194"},{"ruleId":"184","severity":1,"message":"185","line":13,"column":19,"nodeType":"186","messageId":"187","endLine":13,"endColumn":21},{"ruleId":"184","severity":1,"message":"185","line":13,"column":34,"nodeType":"186","messageId":"187","endLine":13,"endColumn":36},{"ruleId":"165","severity":1,"message":"169","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":17},{"ruleId":"165","severity":1,"message":"170","line":4,"column":23,"nodeType":"167","messageId":"168","endLine":4,"endColumn":34},{"ruleId":"165","severity":1,"message":"166","line":24,"column":58,"nodeType":"167","messageId":"168","endLine":24,"endColumn":62},{"ruleId":"165","severity":1,"message":"171","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"195","line":7,"column":8,"nodeType":"167","messageId":"168","endLine":7,"endColumn":13},{"ruleId":"165","severity":1,"message":"196","line":14,"column":9,"nodeType":"167","messageId":"168","endLine":14,"endColumn":25},{"ruleId":"165","severity":1,"message":"197","line":18,"column":9,"nodeType":"167","messageId":"168","endLine":18,"endColumn":18},{"ruleId":"165","severity":1,"message":"169","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":17},{"ruleId":"165","severity":1,"message":"170","line":4,"column":23,"nodeType":"167","messageId":"168","endLine":4,"endColumn":34},{"ruleId":"165","severity":1,"message":"169","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":17},{"ruleId":"165","severity":1,"message":"198","line":6,"column":10,"nodeType":"167","messageId":"168","endLine":6,"endColumn":22},{"ruleId":"165","severity":1,"message":"166","line":17,"column":52,"nodeType":"167","messageId":"168","endLine":17,"endColumn":56},{"ruleId":"165","severity":1,"message":"174","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":17},{"ruleId":"165","severity":1,"message":"175","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":18},{"ruleId":"165","severity":1,"message":"176","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":21},{"ruleId":"165","severity":1,"message":"170","line":4,"column":23,"nodeType":"167","messageId":"168","endLine":4,"endColumn":34},{"ruleId":"165","severity":1,"message":"177","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":21},{"ruleId":"165","severity":1,"message":"183","line":5,"column":23,"nodeType":"167","messageId":"168","endLine":5,"endColumn":32},{"ruleId":"165","severity":1,"message":"199","line":6,"column":9,"nodeType":"167","messageId":"168","endLine":6,"endColumn":18},{"ruleId":"165","severity":1,"message":"178","line":7,"column":10,"nodeType":"167","messageId":"168","endLine":7,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":13,"column":7,"nodeType":"202","endLine":15,"endColumn":35},"no-unused-vars","'time' is assigned a value but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'useSelector' is defined but never used.","'Link' is defined but never used.","'templateSelected' is assigned a value but never used.","'position' is assigned a value but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'useNavigate' is defined but never used.","'Container' is defined but never used.","'params' is assigned a value but never used.","'t1' is defined but never used.","'navigate' is assigned a value but never used.","'date' is assigned a value but never used.","'useParams' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["203","204"],["205","206"],["207","208"],"'paper' is defined but never used.","'handleRemoveUser' is assigned a value but never used.","'onCapture' is assigned a value but never used.","'addPurchased' is defined but never used.","'QRCodeSVG' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"messageId":"209","fix":"210","desc":"211"},{"messageId":"212","fix":"213","desc":"214"},{"messageId":"209","fix":"215","desc":"211"},{"messageId":"212","fix":"216","desc":"214"},{"messageId":"209","fix":"217","desc":"211"},{"messageId":"212","fix":"218","desc":"214"},"removeEscape",{"range":"219","text":"220"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"221","text":"222"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"223","text":"220"},{"range":"224","text":"222"},{"range":"225","text":"220"},{"range":"226","text":"222"},[1206,1207],"",[1206,1206],"\\",[293,294],[293,293],[400,401],[400,400]]