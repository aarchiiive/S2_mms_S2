<<<<<<< HEAD
import type { Action, Dispatch } from 'redux'

export function createInvalidArgFactory(arg: unknown, name: string) {
  return (
    dispatch: Dispatch<Action<unknown>>,
    options: { readonly wrappedComponentName: string }
  ) => {
    throw new Error(
      `Invalid value of type ${typeof arg} for ${name} argument when connecting component ${
        options.wrappedComponentName
      }.`
    )
  }
}
=======
import type { Action, Dispatch } from 'redux'

export function createInvalidArgFactory(arg: unknown, name: string) {
  return (
    dispatch: Dispatch<Action<unknown>>,
    options: { readonly wrappedComponentName: string }
  ) => {
    throw new Error(
      `Invalid value of type ${typeof arg} for ${name} argument when connecting component ${
        options.wrappedComponentName
      }.`
    )
  }
}
>>>>>>> cea7362f76340df4974adfff1099976ac60f0fbe
